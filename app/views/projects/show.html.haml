- meta title: @project.title

.magic-x{data: {action: 'go back'}}

.project-page-wrapper

  .project-page-header-image-wrapper
    .project-page-header-image{ style: "background-image:url(#{@project.primary_image.name.url});"}

  .project-page-content-wrapper
    .project-page-header-text= @project.title

    .project-page-text-wrapper
      .side-bar
        .project-detail-wrapper.location
          .project-detail-label Location:
          .project-detail-text= @project.address

        .project-detail-wrapper.types
          .project-detail-label Types:
          - @project.project_types.each do |type|
            .project-detail-text= type.title

        .project-detail-wrapper.date
          .project-detail-label Dates:
          .project-detail-text= [ @project.start.year, @project.end.year ].join('-')

        .project-page-main-text.overview.hide-on-desktop= @project.overview

        .section.credits.openable.closed
          .title Project Credits
          - @project.roles.each do |role|
            .project-detail-wrapper.role
              .project-detail-label= role.position.title + ":"
              .project-detail-text= role.person.name

        .description.hide-on-desktop.openable.closed
          .content= markdown @project.description

        .section.awards.openable.closed
          .title Recognition
          - @project.awards.group_by(&:year).sort_by{|y,i| y}.reverse.each do |group|
            .project-detail-wrapper.award
              .project-detail-label= group.first
              - group.last.each do |award|
                .project-detail-text= award.title

        .section.bibliography.openable.closed
          .title Bibliography
          - @project.bibliography_items.each do |bib|
            .project-detail-wrapper.bib
              .project-detail-text= bib.title
              -#- if bib.primary_image
                -#.project-detail-image{ style: "background-image:url(#{bib.primary_image.name.thumb.url});"}= bib.title

        -@project.getGalleries.each do |gallery_name, gallery_images|
          .section.image-gallery.hide-on-desktop.openable
            .title= gallery_name
            .project-detail-wrapper.gallery-wrapper
              .gallery
                -gallery_images.each do |image|
                  %img.slide{src: image.name.index.url, data:{original_src: image.name.url, original_src_width: image.width, original_src_height: image.height} }

        .extra-space

      .desktop-content.show-on-desktop
        .project-page-main-text.overview= @project.overview

        .description= markdown(@project.description)

        -@project.getGalleries.each do |gallery_name, gallery_images|
          .section.image-gallery
            .title= gallery_name
            .gallery-wrapper
              .arrow-left
              .arrow-right
              .gallery
                -gallery_images.each do |image|
                  %img.slide{src: image.name.thumb.url, data:{original_src: image.name.url, original_src_width: image.width, original_src_height: image.height} }

.pswp{"aria-hidden" => "true", :role => "dialog", :tabindex => "-1"}
  /
    Background of PhotoSwipe.
    It's a separate element as animating opacity is faster than rgba().
  .pswp__bg
  / Slides wrapper with overflow:hidden.
  .pswp__scroll-wrap
    /
      Container that holds slides.
      PhotoSwipe keeps only 3 of them in the DOM to save memory.
      Don't modify these 3 pswp__item elements, data is added later on.
    .pswp__container
      .pswp__item
      .pswp__item
      .pswp__item
    / Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed.
    .pswp__ui.pswp__ui--hidden
      .pswp__top-bar
        / Controls are self-explanatory. Order can be changed.
        .pswp__counter
        %button.pswp__button.pswp__button--close{:title => "Close (Esc)"}
        %button.pswp__button.pswp__button--share{:title => "Share"}
        %button.pswp__button.pswp__button--fs{:title => "Toggle fullscreen"}
        %button.pswp__button.pswp__button--zoom{:title => "Zoom in/out"}
        / Preloader demo http://codepen.io/dimsemenov/pen/yyBWoR
        / element will get class pswp__preloader--active when preloader is running
        .pswp__preloader
          .pswp__preloader__icn
            .pswp__preloader__cut
              .pswp__preloader__donut
      .pswp__share-modal.pswp__share-modal--hidden.pswp__single-tap
        .pswp__share-tooltip
      %button.pswp__button.pswp__button--arrow--left{:title => "Previous (arrow left)"}
      %button.pswp__button.pswp__button--arrow--right{:title => "Next (arrow right)"}
      .pswp__caption
        .pswp__caption__center
